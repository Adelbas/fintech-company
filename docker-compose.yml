version: '3.8'
services:
  api:
    build: /api
    restart: always
    pull_policy: build
    depends_on:
      - db
    environment:
      - TZ=Europe/Moscow
      - DATASOURCE_URL=jdbc:postgresql://db:5432/fintech_api
      - DATASOURCE_USERNAME=postgres
      - DATASOURCE_PASSWORD=postgres
      - SERVER_PORT=8083
      - ORIGINATION_GRPC_HOST=origination
      - ORIGINATION_GRPC_PORT=9094
    ports:
      - '8083:8083'

  origination:
    build: /origination
    restart: always
    pull_policy: build
    depends_on:
      - db
      - kafka
    environment:
      - TZ=Europe/Moscow
      - DATASOURCE_URL=jdbc:postgresql://db:5432/fintech_origination
      - DATASOURCE_USERNAME=postgres
      - DATASOURCE_PASSWORD=postgres
      - GRPC_PORT=9094
      - SCORING_GRPC_HOST=scoring
      - SCORING_GRPC_PORT=9095
      - PRODUCT_ENGINE_GRPC_HOST=product-engine
      - PRODUCT_ENGINE_GRPC_PORT=9090
      - PAYMENT_GATE_GRPC_HOST=payment-gate
      - PAYMENT_GATE_GRPC_PORT=9096
      - SCHEDULER_INITIAL_DELAY=PT01M
      - SCHEDULER_INTERVAL=PT01M
      - EMAIL_SENDER_USERNAME=username@gmail.com
      - EMAIL_SENDER_PASSWORD=password
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    ports:
      - '9094:9094'

  scoring:
    build: /scoring
    restart: always
    pull_policy: build
    environment:
      - TZ=Europe/Moscow
      - GRPC_PORT=9095
      - PRODUCT_ENGINE_GRPC_HOST=product-engine
      - PRODUCT_ENGINE_GRPC_PORT=9090
    ports:
      - '9095:9095'

  product-engine:
    build: /product-engine
    restart: always
    pull_policy: build
    depends_on:
      - db
      - kafka
    environment:
      - TZ=Europe/Moscow
      - DATASOURCE_URL=jdbc:postgresql://db:5432/fintech_product_engine
      - DATASOURCE_USERNAME=postgres
      - DATASOURCE_PASSWORD=postgres
      - SCHEDULER_INTERVAL_IN_CRON=0 0 0 * * *
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    ports:
      - '9090:9090'

  payment-gate:
    build: /payment-gate
    restart: always
    pull_policy: build
    depends_on:
      - db
    environment:
      - TZ=Europe/Moscow
      - SERVER_PORT=8087
      - GRPC_PORT=9096
      - DATASOURCE_URL=jdbc:postgresql://db:5432/fintech_payment_gate
      - DATASOURCE_USERNAME=postgres
      - DATASOURCE_PASSWORD=postgres
      - ORIGINATION_GRPC_HOST=origination
      - ORIGINATION_GRPC_PORT=9094
      - PRODUCT_ENGINE_GRPC_HOST=product-engine
      - PRODUCT_ENGINE_GRPC_PORT=9090
      - MERCHANT_PROVIDER_REST_HOST=merchant-provider
      - MERCHANT_PROVIDER_REST_PORT=8085
      - SCHEDULER_INITIAL_DELAY=PT01M
      - SCHEDULER_INTERVAL=PT02M
    ports:
      - '9096:9096'
      - '8087:8087'

  merchant-provider:
    build: /merchant-provider
    restart: always
    pull_policy: build
    environment:
      - TZ=Europe/Moscow
      - SERVER_PORT=8085
      - DATASOURCE_URL=jdbc:postgresql://db:5432/fintech_merchant_provider
      - DATASOURCE_USERNAME=postgres
      - DATASOURCE_PASSWORD=postgres
      - PAYMENT_GATE_REST_HOST=payment-gate
      - PAYMENT_GATE_REST_PORT=8087
      - SCHEDULER_INITIAL_DELAY=PT01M
      - SCHEDULER_INTERVAL=PT01M
    ports:
      - '8085:8085'

  dwh:
    build: /dwh
    restart: always
    pull_policy: build
    depends_on:
      - db
      - kafka
    environment:
      - TZ=Europe/Moscow
      - DATASOURCE_USERNAME=postgres
      - DATASOURCE_PASSWORD=postgres
      - DB_DATABASE=fintech_dwh
      - DB_HOST=db
      - DB_PORT=5432
      - DB_SCHEMA=public
      - DB_PARTMAN_SCHEMA=partman
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - KAFKA_CONSUMER_GROUP_ID=dwh

  db:
    image: huntress/postgres-partman:14
    restart: always
    environment:
      - TZ=Europe/Moscow
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5433:5432'
    volumes:
      - db:/var/lib/postgresql/data
      - ./docker/pg-init-scripts:/docker-entrypoint-initdb.d

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      start_period: 10s
      retries: 20
      interval: 10s

  kafka:
    image: confluentinc/cp-kafka:7.3.1
    hostname: kafka
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - '29092:29092'
      - '9092:9092'
      - '9101:9101'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

volumes:
  db:
    driver: local